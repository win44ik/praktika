using System;
class Program
{
    static void Main()
    {
        Console.Write("Введите размер массива N: "); // Запрос размера массива у пользователя
        if (!int.TryParse(Console.ReadLine(), out int n) || n <= 0) // Проверка, является ли ввод положительным целым числом
        {
            Console.WriteLine("Ошибка: введите положительное целое число для N"); // Вывод ошибки при некорректном вводе
            return;
        }
        double[] array = new double[n]; // Создание массива размером N
        for (int i = 0; i < n; i++) // Цикл для заполнения массива
        {
            Console.Write($"Введите элемент {i + 1}: "); // Запрос i-го элемента у пользователя
            if (!double.TryParse(Console.ReadLine(), out array[i])) // Проверка, является ли ввод вещественным числом
            {
                Console.WriteLine("Ошибка: введите вещественное число"); // Вывод ошибки при некорректном вводе
                return;
            }
        }
        double maxAbs = 0; // Переменная для хранения максимального по модулю элемента
        foreach (double num in array) // Проход по массиву для поиска максимума по модулю
        {
            double abs = Math.Abs(num); // Вычисление модуля текущего элемента
            if (abs > maxAbs) maxAbs = abs; // Обновление максимума, если текущий модуль больше
        }
        if (maxAbs == 0) // Проверка, не равен ли максимум по модулю нулю
        {
            Console.WriteLine("Ошибка: все элементы равны нулю, нормировка невозможна"); // Вывод ошибки при невозможности нормировки
            return;
        }
        Console.Write("Измененный массив: "); // Вывод заголовка для результата
        for (int i = 0; i < n; i++) // Цикл для нормировки и вывода элементов
        {
            double normalized = array[i] / maxAbs; // Нормировка элемента путем деления на максимум
            Console.Write($"{normalized:F2} "); // Вывод нормированного элемента с двумя знаками после запятой
        }
        Console.WriteLine(); // Переход на новую строку
    }
}
